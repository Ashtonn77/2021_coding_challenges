class Solution {
    public List<String> ambiguousCoordinates(String s) {
        
        s = s.substring(1, s.length() - 1);
        List<String> result = new LinkedList<>();
        
        for(int i = 1; i < s.length(); i++){
            
            List<String> left = helper(s.substring(0, i));
            List<String> right = helper(s.substring(i));            
            
            for(String l : left){
                
                for(String r : right){
                    
                    result.add("(" + l + ", " + r + ")");
                    
                }                
                
            }            
            
        }
                
        return result;
        
    }
    
    List<String> helper(String s){
        
        List<String> result = new LinkedList<>();
        
        char[] arr = s.toCharArray();
        int _l = arr.length;
        
        if(arr[0] == '0' && arr[_l - 1] == '0'){
            if(_l == 1){
                result.add("0");                
            }
            return result;
        }
        
        if(arr[0] == '0'){
            
            result.add("0." + s.substring(1));
            return result;
            
        }
        
        if(arr[_l - 1] == '0'){
            result.add(s);
            return result;
        }
        
        result.add(s);
        
        for(int i = 1; i < _l; i++){
            
            result.add(s.substring(0, i) + "." + s.substring(i));
            
        }
                
        return result;
    }
    
}












