class Solution {
    public int superpalindromesInRange(String left, String right) {
        long l=Long.valueOf(left);
        long r=Long.valueOf(right);
        int count=0;
        for(int i=1;i<=100000;i++)
        {
            StringBuilder b=new StringBuilder(Integer.toString(i));
            for(int j=b.length()-1;j>=0;j--)
            {
                b.append(b.charAt(j));
            }
          //  System.out.println(b);
            long n=Long.valueOf(b.toString());
            n*=n;
            if(n>r)
                break;
            if(n>=l&&ispailindrome(n))
                count++;
                
        }
        for(int i=1;i<=100000;i++)
        {
           StringBuilder b=new StringBuilder(Integer.toString(i));
            for(int j=b.length()-2;j>=0;j--)
            {
                b.append(b.charAt(j));
            }
            //System.out.println(b);
            long n=Long.valueOf(b.toString());
            n*=n;
            if(n>r)
                break;
            if(n>=l&&ispailindrome(n))
                count++;
                
        }
        return count;
    }
    public boolean ispailindrome(long a)
    {
        return a==reverse(a);
    }
    public long reverse(long a)
    {
        long rev=0;
        while(a>0)
        {
            rev=rev*10+a%10;
            a/=10;
        }
        return rev;
    }
}